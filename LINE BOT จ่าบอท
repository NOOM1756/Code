const CHANNEL_ACCESS_TOKEN = 'CRhpqwLjwVV/5EKclt6ujkyvo4AftGwxT50Yr9C2evtDqeLv92SiEfx+UNjGlZtTQzJ84gU+9Y57/hd1bkaNkzj+Fsm/3WFM/Sm4olCLylXZzTqd3+umF1TRsWBnvRycGwgciuQV2uE66thfbPLivAdB04t89/1O/w1cDnyilFU=';
const PROFILE_PICTURE_FOLDER_NAME = 'LINE_Bot_Profile_Pictures';
const COMMAND_FILES_FOLDER_NAME = 'LINE_Bot_Command_Files';

function doPost(e) {
  const event = JSON.parse(e.postData.contents).events[0];
  const userId = event.source.userId;

  if (event.type === 'message') {
    if (event.message.type === 'text') {
      const text = event.message.text.trim();

      // ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
      if (text.startsWith('‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô')) handleRegistration(userId, text);

      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
      else if (text === '/‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô') handleCommandChildInfo(event);
      else if (text === '/‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô') handleCommandPersonnelInfo(event);
      // NEW: ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
      else if (text.startsWith('/‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ')) handleSetProfilePicture(userId, text);

      // ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°
      else if (text === '/‡πÄ‡∏ß‡∏£‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô') handleCommandDutyToday(event);
      else if (text === '/‡πÄ‡∏ß‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô') handleMonthlyDuty(event);
      else if (text === '/‡πÄ‡∏ß‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á') handlePastDuties(event);

      // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• (Admin)
      else if (text.startsWith('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• ')) handleAddPersonnel(userId, text);
      else if (text.startsWith('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• ')) handleEditPersonnel(userId, text);
      else if (text.startsWith('/‡∏•‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• ')) handleDeletePersonnel(userId, text);
      else if (text === '/‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î') handleViewAllPersonnel(event);

      // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£
      else if (text.startsWith('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏ï‡∏£ ')) handleAddChild(userId, text);
      else if (text.startsWith('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ ')) handleEditChild(userId, text);
      else if (text.startsWith('/‡∏•‡∏ö‡∏ö‡∏∏‡∏ï‡∏£ ')) handleDeleteChild(userId, text);
      else if (text === '/‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î') handleViewAllChildren(event);

      // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏° (Admin)
      else if (text.startsWith('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏£ ')) handleAddDuty(userId, text);
      else if (text.startsWith('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ ')) handleEditDuty(userId, text);
      else if (text.startsWith('/‡∏•‡∏ö‡πÄ‡∏ß‡∏£ ')) handleDeleteDuty(userId, text);
      else if (text === '/‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î') handleViewAllDuties(event);

      // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡πÇ‡∏î‡∏¢‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á, ‡∏•‡∏ö‡πÇ‡∏î‡∏¢ Admin, ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏î‡∏¢‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô)
      else if (text.startsWith('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ')) handleAddCommand(userId, text);
      else if (text.startsWith('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ')) handleEditCommand(userId, text);
      else if (text.startsWith('/‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ')) handleDeleteCommand(userId, text);
      else if (text.startsWith('/‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ')) handleSearchCommand(userId, text);
      // NEW: ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
      else if (text.startsWith('/‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ')) handleLinkCommandFile(userId, text);


      // ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
      else if (text === '/‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢') handleCompanyChildrenReport(event);
      else if (text === '/‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô') handleGenerateReport(event);

      // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
      else sendReply(userId, getHelpMessage());

    } else if (event.message.type === 'image' || event.message.type === 'file') {
      // NEW: Handle incoming image/file messages
      handleIncomingFileOrImage(userId, event.message.id, event.message.type, event.message.fileName, event.message.contentProvider);
    }
  }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ LINE Bot
 * @returns {string} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
 */
function getHelpMessage() {
  return `ü§ñ **‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏´‡∏≤‡∏£ LINE Bot**

üìã **‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô**
‚Ä¢ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô <‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£>

üë§ **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß**
‚Ä¢ /‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
‚Ä¢ /‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á
‚Ä¢ **(‡πÉ‡∏´‡∏°‡πà)** ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå /‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå <‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£> - ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

‚è∞ **‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°**
‚Ä¢ /‡πÄ‡∏ß‡∏£‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô - ‡∏î‡∏π‡πÄ‡∏ß‡∏£‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
‚Ä¢ /‡πÄ‡∏ß‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô - ‡∏î‡∏π‡πÄ‡∏ß‡∏£‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
‚Ä¢ /‡πÄ‡∏ß‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á - ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏ß‡∏£
‚Ä¢ **‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥** - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡∏Å‡πà‡∏≠‡∏ô 8 ‡πÇ‡∏°‡∏á‡πÄ‡∏ä‡πâ‡∏≤ (‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Trigger ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)

üë∂ **‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£**
‚Ä¢ /‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô>|<‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡πÉ‡∏´‡∏°‡πà>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô>|<‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô>
‚Ä¢ /‡∏•‡∏ö‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£>
‚Ä¢ /‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

üë• **‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•** (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£)
‚Ä¢ /‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢>|<‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô>|<‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>|<‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î>|<‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á>|<‡πÄ‡∏´‡∏•‡πà‡∏≤>|<‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô>|<‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì>|<URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°>|<‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢>|<‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô>|<‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>|<‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î>|<‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á>|<‡πÄ‡∏´‡∏•‡πà‡∏≤>|<‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô>|<‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì>|<URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û>
‚Ä¢ /‡∏•‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>
‚Ä¢ /‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

üõ°Ô∏è **‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°** (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£)
‚Ä¢ /‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà>|<‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢>|<‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°>|<‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°>|<‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà(‡∏û.‡∏®.)>|<‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà>|<‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà>|<‡∏™‡∏Å‡∏∏‡∏•‡πÉ‡∏´‡∏°‡πà>|<‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà>|<‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢‡πÉ‡∏´‡∏°‡πà>|<‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÉ‡∏´‡∏°‡πà>
‚Ä¢ /‡∏•‡∏ö‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>
‚Ä¢ /‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

üìú **‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á** (‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏î‡∏¢‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á, ‡∏•‡∏ö‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£, ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏î‡∏¢‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô)
‚Ä¢ /‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á>|<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‚Ä¢ /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà>|<‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà>|<‡∏™‡∏Å‡∏∏‡∏•‡πÉ‡∏´‡∏°‡πà>|<‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà>|<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà>
‚Ä¢ /‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>
‚Ä¢ /‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î>
‚Ä¢ **(‡πÉ‡∏´‡∏°‡πà)** ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£/‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå /‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)> - ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

üìä **‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô** (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£)
‚Ä¢ /‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢
‚Ä¢ /‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô

üí° **‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏π‡πâ:**
‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ (‡∏û.‡∏®.) ‡πÄ‡∏ä‡πà‡∏ô 25/07/2568`;
}

/**
 * ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á
 */
function sendReply(userId, text) {
  UrlFetchApp.fetch("https://api.line.me/v2/bot/message/push", {
    method: "post",
    headers: {
      "Content-Type": "application/json",
      "Authorization": "Bearer " + CHANNEL_ACCESS_TOKEN
    },
    payload: JSON.stringify({
      to: userId,
      messages: [{ type: "text", text }]
    })
  });
}

/**
 * ‡∏™‡πà‡∏á Flex Message ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @param {string} userId - LINE User ID
 * @param {object} flexContent - ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message
 */
function sendFlex(userId, flexContent) {
  UrlFetchApp.fetch("https://api.line.me/v2/bot/message/push", {
    method: "post",
    headers: {
      "Content-Type": "application/json",
      "Authorization": "Bearer " + CHANNEL_ACCESS_TOKEN
    },
    payload: JSON.stringify({
      to: userId,
      messages: [
        {
          type: "flex",
          altText: "üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          contents: flexContent
        }
      ]
    })
  });
}

/**
 * ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
 */
function handleRegistration(userId, text) {
  const loginSheet = SpreadsheetApp.getActive().getSheetByName('LOGIN');
  const loginData = loginSheet.getDataRange().getValues();
  const parts = text.split(' ');

  if (parts.length !== 2 || parts[0] !== '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô') {
    return sendReply(userId, '‚ùó ‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤: ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô <‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£>\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô 1565601540');
  }

  const militaryId = parts[1];
  const exists = loginData.some(row => row[0] === userId);
  const alreadyUsed = loginData.some(row => row[1] === militaryId);

  if (alreadyUsed) {
    return sendReply(userId, '‚ùå ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
  }

  if (exists) {
    for (let i = 1; i < loginData.length; i++) {
      if (loginData[i][0] === userId) {
        loginSheet.getRange(i + 1, 2).setValue(militaryId);
        return sendReply(userId, '‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
      }
    }
  } else {
    loginSheet.appendRow([userId, militaryId]);
    return sendReply(userId, '‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß');
  }
}

/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏ï‡∏£
 */
function handleAddChild(userId, text) {
  const militaryId = getUserMilitaryId(userId);
  if (!militaryId) return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const parts = text.replace('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏ï‡∏£ ', '').split('|');
  // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤": ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£, ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£, ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î, ‡∏≠‡∏≤‡∏¢‡∏∏, ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤, ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô, ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤, ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (8 columns)
  if (parts.length !== 7) { // 7 fields excluding militaryId (which is auto-added)
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô>|<‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô>

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏ï‡∏£ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ|01/01/2553|14|‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡∏≠‡∏ô‡∏ï‡πâ‡∏ô|‡∏°.2|‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏±‡∏î‡πÉ‡∏´‡∏ç‡πà|3.25`);
  }

  const [childName, birthdateStr, age, educationLevel, grade, school, result] = parts.map(p => p.trim());

  // Validate birthdate format
  const birthdate = parseThaiDateToDateObject(birthdateStr);
  if (!birthdate) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 01/01/2553)');
  }
  const formattedBirthdate = formatDateToThaiBuddhist(birthdate); // Store as B.E.

  const childSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤');
  childSheet.appendRow([militaryId, childName, formattedBirthdate, age, educationLevel, grade, school, result]);

  sendReply(userId, `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£ "${childName}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
}

/**
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£
 */
function handleEditChild(userId, text) {
  const militaryId = getUserMilitaryId(userId);
  if (!militaryId) return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const cleanText = text.replace('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ ', '');
  const parts = cleanText.split('|');

  const childSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤');
  const data = childSheet.getDataRange().getValues();

  // Define a mapping from user-friendly field names to column indices (0-based)
  // [0]‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£, [1]‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£, [2]‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î, [3]‡∏≠‡∏≤‡∏¢‡∏∏, [4]‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤, [5]‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô, [6]‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤, [7]‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const childFieldMap = {
    "‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£": 1,
    "‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î": 2,
    "‡∏≠‡∏≤‡∏¢‡∏∏": 3,
    "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤": 4,
    "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô": 5,
    "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤": 6,
    "‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô": 7
  };

  // --- Handle Partial Update (3 parts: oldChildName | fieldName | newValue) ---
  if (parts.length === 3) {
    const [oldChildName, fieldName, newValueRaw] = parts.map(p => p.trim());

    if (!oldChildName || !fieldName || newValueRaw === undefined) {
      return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>`);
    }

    const colIndex = childFieldMap[fieldName];
    if (colIndex === undefined) {
      return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
    }

    let newValue = newValueRaw;
    // Special handling for date fields
    if (fieldName === "‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î") {
      const newDate = parseThaiDateToDateObject(newValueRaw);
      if (!newDate) {
        return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 01/01/2553)');
      }
      newValue = formatDateToThaiBuddhist(newDate);
    }

    let foundAndEdited = false;
    for (let i = 1; i < data.length; i++) {
      if (String(data[i][0]).trim() === String(militaryId).trim() && String(data[i][1]).trim() === String(oldChildName).trim()) {
        childSheet.getRange(i + 1, colIndex + 1).setValue(newValue);
        foundAndEdited = true;
        break;
      }
    }

    if (foundAndEdited) {
      sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£ "${oldChildName}" ‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡πÄ‡∏õ‡πá‡∏ô "${newValueRaw}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    } else {
      sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£ "${oldChildName}" ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì`);
    }
  }
  // --- Handle Full Row Update (8 parts: oldChildName | newChildName | ...) ---
  else if (parts.length === 8) { // 1 (oldName) + 7 (new fields for child) = 8
    const [oldName, newName, birthdateStr, age, educationLevel, grade, school, result] = parts.map(p => p.trim());

    const birthdate = parseThaiDateToDateObject(birthdateStr);
    if (!birthdate) {
      return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 01/01/2553)');
    }
    const formattedBirthdate = formatDateToThaiBuddhist(birthdate);

    let foundAndEdited = false;
    for (let i = 1; i < data.length; i++) {
      if (String(data[i][0]).trim() === String(militaryId).trim() && String(data[i][1]).trim() === String(oldName).trim()) {
        // Data for setValues should match the columns from index 1 to 7 (inclusive)
        childSheet.getRange(i + 1, 2, 1, 7).setValues([[newName, formattedBirthdate, age, educationLevel, grade, school, result]]);
        foundAndEdited = true;
        break;
      }
    }

    if (foundAndEdited) {
      sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£ "${oldName}" ‡πÄ‡∏õ‡πá‡∏ô "${newName}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    } else {
      sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
    }
  }
  // --- Invalid Format ---
  else {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≤‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå:
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ|‡∏≠‡∏≤‡∏¢‡∏∏|15

üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡πÉ‡∏´‡∏°‡πà>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô>|<‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤>|<‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô>`);
  }
}


/**
 * ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö‡∏ö‡∏∏‡∏ï‡∏£
 */
function handleDeleteChild(userId, text) {
  const militaryId = getUserMilitaryId(userId);
  if (!militaryId) return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const childName = text.replace('/‡∏•‡∏ö‡∏ö‡∏∏‡∏ï‡∏£ ', '').trim();
  if (!childName) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: /‡∏•‡∏ö‡∏ö‡∏∏‡∏ï‡∏£ <‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£>\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡∏•‡∏ö‡∏ö‡∏∏‡∏ï‡∏£ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ');
  }

  const childSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤');
  const data = childSheet.getDataRange().getValues();

  for (let i = 1; i < data.length; i++) {
    if (String(data[i][0]).trim() === String(militaryId).trim() && String(data[i][1]).trim() === String(childName).trim()) {
      childSheet.deleteRow(i + 1);
      return sendReply(userId, `‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£ "${childName}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    }
  }

  sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
}

/**
 * ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleViewAllChildren(e) {
  const userId = e.source.userId;
  const militaryId = getUserMilitaryId(userId);
  if (!militaryId) return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const childSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤');
  const children = childSheet.getDataRange().getValues()
    .slice(1)
    .filter(row => String(row[0]).trim() === String(militaryId).trim());

  if (children.length === 0) {
    return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ');
  }

  let message = 'üë∂ **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î**\n\n';
  children.forEach((child, index) => {
    // Columns: ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£, ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£, ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î, ‡∏≠‡∏≤‡∏¢‡∏∏, ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤, ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô, ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤, ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
    message += `${index + 1}. ${child[1]}\n`; // ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£
    message += `    üìÖ ‡πÄ‡∏Å‡∏¥‡∏î: ${child[2]} (‡∏≠‡∏≤‡∏¢‡∏∏ ${child[3]} ‡∏õ‡∏µ)\n`; // ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î, ‡∏≠‡∏≤‡∏¢‡∏∏
    message += `    üéì ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ${child[4]} ${child[5]}\n`; // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤, ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô
    message += `    üè´ ${child[6]}\n`; // ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    message += `    üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${child[7]}\n\n`; // ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  });

  sendReply(userId, message);
}

/**
 * ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DD/MM/YYYY (‡∏û.‡∏®. ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ.‡∏®.) ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏ Date
 * @param {string} dateString - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DD/MM/YYYY
 * @returns {Date|null} ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏ Date ‡∏´‡∏£‡∏∑‡∏≠ null ‡∏´‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
 */
function parseThaiDateToDateObject(dateString) {
  const parts = dateString.split('/');
  if (parts.length !== 3) return null;

  let day = parseInt(parts[0], 10);
  let month = parseInt(parts[1], 10);
  let year = parseInt(parts[2], 10);

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ ‡∏û.‡∏®. ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2500 ‡πÉ‡∏´‡πâ‡∏•‡∏ö 543)
  if (year > 2500) { // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏õ‡∏µ ‡∏û.‡∏®. ‡∏à‡∏∞‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2500
    year -= 543;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Date object (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô JavaScript ‡πÄ‡∏õ‡πá‡∏ô 0-indexed)
  const date = new Date(year, month - 1, day);

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÄ‡∏ä‡πà‡∏ô 31 ‡∏Å.‡∏û.)
  if (date.getDate() !== day || date.getMonth() + 1 !== month || date.getFullYear() !== year) {
    return null; // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  }
  return date;
}

/**
 * ‡πÅ‡∏õ‡∏•‡∏á Date object ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô String ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DD/MM/YYYY (‡∏û.‡∏®.)
 * @param {Date} dateObject - ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏ Date
 * @returns {string} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DD/MM/YYYY (‡∏û.‡∏®.)
 */
function formatDateToThaiBuddhist(dateObject) {
  if (!(dateObject instanceof Date) || isNaN(dateObject)) return 'N/A';
  const day = String(dateObject.getDate()).padStart(2, '0');
  const month = String(dateObject.getMonth() + 1).padStart(2, '0');
  const yearBE = dateObject.getFullYear() + 543; // Convert AD to BE
  return `${day}/${month}/${yearBE}`;
}


/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏° (Admin Only)
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏£
 */
function handleAddDuty(userId, text) {
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°');
  }

  const parts = text.replace('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏£ ', '').split('|');
  // Columns in "‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°": ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà, ‡∏¢‡∏®, ‡∏ä‡∏∑‡πà‡∏≠, ‡∏™‡∏Å‡∏∏‡∏•, ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà, ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (7 columns)
  if (parts.length !== 7) {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà>|<‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢>|<‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£>

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏£ 25/12/2567|‡∏à.‡∏™.‡∏≠.|‡∏™‡∏°‡∏ä‡∏≤‡∏¢|‡πÉ‡∏à‡∏î‡∏µ|‡πÄ‡∏ß‡∏£‡∏õ‡∏£‡∏∞‡∏ï‡∏π|‡∏£.1|081-234-5678`);
  }

  const [dateStr, rank, firstName, lastName, duty, company, phone] = parts.map(p => p.trim());

  // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (Date object)
  const dutyDate = parseThaiDateToDateObject(dateStr);
  if (!dutyDate) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/12/2567)');
  }

  // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô DD/MM/YYYY (‡∏û.‡∏®.) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ä‡∏µ‡∏ó
  const formattedDate = formatDateToThaiBuddhist(dutyDate);

  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  dutySheet.appendRow([formattedDate, rank, firstName, lastName, duty, company, phone]);

  sendReply(userId, `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏° "${rank} ${firstName} ${lastName}" ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
}

/**
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏° (Admin Only)
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£
 */
function handleEditDuty(userId, text) {
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°');
  }

  const cleanText = text.replace('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ ', '');
  const parts = cleanText.split('|');

  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const data = dutySheet.getDataRange().getValues();

  // Define a mapping from user-friendly field names to column indices (0-based)
  // Columns in "‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°": ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà(4), ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(5), ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£(6)
  const dutyFieldMap = {
    "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà": 0,
    "‡∏¢‡∏®": 1,
    "‡∏ä‡∏∑‡πà‡∏≠": 2,
    "‡∏™‡∏Å‡∏∏‡∏•": 3,
    "‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà": 4,
    "‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢": 5,
    "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£": 6
  };

  // --- Handle Partial Update (5 parts: oldDateStr | oldFirstName | oldLastName | fieldName | newValue) ---
  if (parts.length === 5) {
    const [oldDateStr, oldFirstName, oldLastName, fieldName, newValueRaw] = parts.map(p => p.trim());

    if (!oldDateStr || !oldFirstName || !oldLastName || !fieldName || newValueRaw === undefined) {
      return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°>|<‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>`);
    }

    const oldDutyDate = parseThaiDateToDateObject(oldDateStr);
    if (!oldDutyDate) {
      return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/12/2567)');
    }
    const formattedOldDate = formatDateToThaiBuddhist(oldDutyDate);

    const colIndex = dutyFieldMap[fieldName];
    if (colIndex === undefined) {
      return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
    }

    let newValue = newValueRaw;
    // Special handling for date field if "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà" is being changed
    if (fieldName === "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà") {
      const newDate = parseThaiDateToDateObject(newValueRaw);
      if (!newDate) {
        return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 26/12/2567)');
      }
      newValue = formatDateToThaiBuddhist(newDate);
    }

    let foundAndEdited = false;
    for (let i = 1; i < data.length; i++) {
      if (String(data[i][0]).trim() === formattedOldDate &&
          String(data[i][2]).trim() === String(oldFirstName).trim() &&
          String(data[i][3]).trim() === String(oldLastName).trim()) {
        dutySheet.getRange(i + 1, colIndex + 1).setValue(newValue);
        foundAndEdited = true;
        break;
      }
    }

    if (foundAndEdited) {
      sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏Ç‡∏≠‡∏á ${oldFirstName} ${oldLastName} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedOldDate} ‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡πÄ‡∏õ‡πá‡∏ô "${newValueRaw}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    } else {
      sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏Ç‡∏≠‡∏á ${oldFirstName} ${oldLastName} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedOldDate} ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏`);
    }
  }
  // --- Handle Full Row Update (10 parts: oldDateStr | oldFirstName | oldLastName | newDateStr | newRank | newFirstName | newLastName | newDuty | newCompany | newPhone) ---
  else if (parts.length === 10) { // 3 (old identify) + 7 (new fields) = 10
    const [oldDateStr, oldFirstName, oldLastName, newDateStr, newRank, newFirstName, newLastName, newDuty, newCompany, newPhone] = parts.map(p => p.trim());

    // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà
    const oldDutyDate = parseThaiDateToDateObject(oldDateStr);
    if (!oldDutyDate) {
      return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/12/2567)');
    }
    const formattedOldDate = formatDateToThaiBuddhist(oldDutyDate);

    const newDutyDate = parseThaiDateToDateObject(newDateStr);
    if (!newDutyDate) {
      return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 26/12/2567)');
    }
    const formattedNewDate = formatDateToThaiBuddhist(newDutyDate);

    let foundAndEdited = false;
    for (let i = 1; i < data.length; i++) {
      if (String(data[i][0]).trim() === formattedOldDate &&
          String(data[i][2]).trim() === String(oldFirstName).trim() &&
          String(data[i][3]).trim() === String(oldLastName).trim()) {
        const newData = [formattedNewDate, newRank, newFirstName, newLastName, newDuty, newCompany, newPhone];
        dutySheet.getRange(i + 1, 1, 1, newData.length).setValues([newData]);
        foundAndEdited = true;
        break;
      }
    }

    if (foundAndEdited) {
      sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏Ç‡∏≠‡∏á ${oldFirstName} ${oldLastName} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedOldDate} ‡πÄ‡∏õ‡πá‡∏ô ${newFirstName} ${newLastName} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedNewDate} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    } else {
      sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
    }
  }
  // --- Invalid Format ---
  else {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≤‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå:
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°>|<‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ 25/12/2567|‡∏™‡∏°‡∏ä‡∏≤‡∏¢|‡πÉ‡∏à‡∏î‡∏µ|‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà|‡πÄ‡∏ß‡∏£‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢

üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°>|<‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏î‡∏¥‡∏°>|<‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà(‡∏û.‡∏®.)>|<‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà>|<‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà>|<‡∏™‡∏Å‡∏∏‡∏•‡πÉ‡∏´‡∏°‡πà>|<‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà>|<‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢‡πÉ‡∏´‡∏°‡πà>|<‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÉ‡∏´‡∏°‡πà>`);
  }
}


/**
 * ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏° (Admin Only)
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö‡πÄ‡∏ß‡∏£
 */
function handleDeleteDuty(userId, text) {
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°');
  }

  const parts = text.replace('/‡∏•‡∏ö‡πÄ‡∏ß‡∏£ ', '').split('|');
  if (parts.length !== 3) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: /‡∏•‡∏ö‡πÄ‡∏ß‡∏£ <‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡∏•‡∏ö‡πÄ‡∏ß‡∏£ 25/12/2567|‡∏™‡∏°‡∏ä‡∏≤‡∏¢|‡πÉ‡∏à‡∏î‡∏µ');
  }

  const [dateStr, firstName, lastName] = parts.map(p => p.trim());

  // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
  const dutyDate = parseThaiDateToDateObject(dateStr);
  if (!dutyDate) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/12/2567)');
  }
  const formattedDate = formatDateToThaiBuddhist(dutyDate);

  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const data = dutySheet.getDataRange().getValues();

  let foundAndDeleted = false;
  for (let i = 1; i < data.length; i++) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡∏ä‡∏∑‡πà‡∏≠ ‡πÅ‡∏•‡∏∞‡∏™‡∏Å‡∏∏‡∏•
    if (String(data[i][0]).trim() === formattedDate && String(data[i][2]).trim() === String(firstName).trim() && String(data[i][3]).trim() === String(lastName).trim()) {
      dutySheet.deleteRow(i + 1);
      foundAndDeleted = true;
      break;
    }
  }

  if (foundAndDeleted) {
    sendReply(userId, `‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏° "${firstName} ${lastName}" ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
  } else {
    sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
  }
}

/**
 * ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Admin Only)
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleViewAllDuties(e) {
  const userId = e.source.userId;
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
  }

  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const duties = dutySheet.getDataRange().getValues().slice(1);

  if (duties.length === 0) {
    return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°');
  }

  let message = 'üõ°Ô∏è **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î**\n\n';
  duties.slice(0, 20).forEach((duty, index) => { // ‡πÅ‡∏™‡∏î‡∏á 20 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
    // Columns: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà(4), ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(5), ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£(6)
    message += `${index + 1}. ${duty[0]} - ${duty[1]} ${duty[2]} ${duty[3]}\n`;
    message += `    üìç ${duty[4]} | ${duty[5]} | ‚òéÔ∏è ${duty[6]}\n\n`;
  });

  if (duties.length > 20) {
    message += `\n... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å ${duties.length - 20} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
  }

  sendReply(userId, message);
}

/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• (Admin Only)
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•
 */
function handleAddPersonnel(userId, text) {
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  }

  const parts = text.replace('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• ', '').split('|');
  // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•": ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢, ‡∏¢‡∏®, ‡∏ä‡∏∑‡πà‡∏≠, ‡∏™‡∏Å‡∏∏‡∏•, ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô, ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£, ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î, ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á, ‡πÄ‡∏´‡∏•‡πà‡∏≤, ‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î, ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î, ‡∏≠‡∏≤‡∏¢‡∏∏, ‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô, ‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏, ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®, ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô, ‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì, URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (18 columns)
  if (parts.length !== 18) {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 18 ‡∏ü‡∏¥‡∏•‡∏î‡πå:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢>|<‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô>|<‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>|<‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î>|<‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á>|<‡πÄ‡∏´‡∏•‡πà‡∏≤>|<‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô>|<‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì>|<URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û>

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• ‡∏£.1|‡∏à.‡∏™.‡∏≠.|‡∏™‡∏°‡∏ä‡∏≤‡∏¢|‡πÉ‡∏à‡∏î‡∏µ|1234567890123|1565601540|‡∏Å‡∏£‡∏° ‡∏ó‡∏û.21|‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ú‡∏ô‡∏Å|‡∏£‡∏≤‡∏ö|‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø|01/01/2528|39|01/01/2548|01/01/2549|01/01/2553|35000|2545|https://example.com/profile.jpg`);
  }

  // Extract and validate date fields, then convert to B.E. for storage
  const [
    company, rank, firstName, lastName, nationalId, militaryId, affiliation, position, branch, origin,
    birthdateStr, age, registrationDateStr, appointmentDateStr, rankAcquisitionDateStr,
    salary, retirementYear, imageUrl
  ] = parts.map(p => p.trim());

  const birthdate = parseThaiDateToDateObject(birthdateStr);
  const registrationDate = parseThaiDateToDateObject(registrationDateStr);
  const appointmentDate = parseThaiDateToDateObject(appointmentDateStr);
  const rankAcquisitionDate = parseThaiDateToDateObject(rankAcquisitionDateStr);

  if (!birthdate || !registrationDate || !appointmentDate || !rankAcquisitionDate) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®.) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î, ‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô, ‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏, ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®');
  }

  const formattedBirthdate = formatDateToThaiBuddhist(birthdate);
  const formattedRegistrationDate = formatDateToThaiBuddhist(registrationDate);
  const formattedAppointmentDate = formatDateToThaiBuddhist(appointmentDate);
  const formattedRankAcquisitionDate = formatDateToThaiBuddhist(rankAcquisitionDate);

  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  personnelSheet.appendRow([
    company, rank, firstName, lastName, nationalId, militaryId, affiliation, position, branch, origin,
    formattedBirthdate, age, formattedRegistrationDate, formattedAppointmentDate, formattedRankAcquisitionDate,
    salary, retirementYear, imageUrl
  ]);

  sendReply(userId, `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• "${rank} ${firstName} ${lastName}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
}

/**
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• (Admin Only)
 * ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≤‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•
 */
function handleEditPersonnel(userId, text) {
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  }

  const cleanText = text.replace('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• ', '');
  const parts = cleanText.split('|');

  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const data = personnelSheet.getDataRange().getValues();

  // Define a mapping from user-friendly field names to column indices (0-based)
  // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•":
  // ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô(4), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5), ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î(6), ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á(7), ‡πÄ‡∏´‡∏•‡πà‡∏≤(8), ‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î(9),
  // ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(10), ‡∏≠‡∏≤‡∏¢‡∏∏(11), ‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô(12), ‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏(13), ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®(14), ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô(15), ‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì(16), URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û(17)
  const personnelFieldMap = {
    "‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢": 0,
    "‡∏¢‡∏®": 1,
    "‡∏ä‡∏∑‡πà‡∏≠": 2,
    "‡∏™‡∏Å‡∏∏‡∏•": 3,
    "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô": 4,
    "‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£": 5, // Key field for lookup
    "‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î": 6,
    "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á": 7,
    "‡πÄ‡∏´‡∏•‡πà‡∏≤": 8,
    "‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î": 9,
    "‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î": 10,
    "‡∏≠‡∏≤‡∏¢‡∏∏": 11,
    "‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô": 12,
    "‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏": 13,
    "‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®": 14,
    "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô": 15,
    "‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì": 16,
    "URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û": 17
  };

  // --- Handle Partial Update (3 parts: militaryId | fieldName | newValue) ---
  if (parts.length === 3) {
    const [militaryId, fieldName, newValueRaw] = parts.map(p => p.trim());

    if (!militaryId || !fieldName || newValueRaw === undefined) {
      return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>`);
    }

    const colIndex = personnelFieldMap[fieldName];
    if (colIndex === undefined) {
      return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
    }

    let newValue = newValueRaw;
    // Special handling for date fields
    if (["‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î", "‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô", "‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏", "‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®"].includes(fieldName)) {
      const newDate = parseThaiDateToDateObject(newValueRaw);
      if (!newDate) {
        return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "${fieldName}" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®.)`);
      }
      newValue = formatDateToThaiBuddhist(newDate);
    }

    let foundAndEdited = false;
    for (let i = 1; i < data.length; i++) {
      if (String(data[i][5]).trim() === String(militaryId).trim()) { // Column F (‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£)
        personnelSheet.getRange(i + 1, colIndex + 1).setValue(newValue);
        foundAndEdited = true;
        break;
      }
    }

    if (foundAndEdited) {
      sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ "${militaryId}" ‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡πÄ‡∏õ‡πá‡∏ô "${newValueRaw}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    } else {
      sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ "${militaryId}" ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏`);
    }
  }
  // --- Handle Full Row Update (18 parts: oldMilitaryId | newCompany | ... | newImageUrl) ---
  else if (parts.length === 19) { // 1 (oldMilitaryId) + 18 (new data fields) = 19
    const oldMilitaryId = parts[0].trim();
    const newDataRaw = parts.slice(1).map(p => p.trim());

    // Validate and format date fields within the new data
    // Indices for ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(10), ‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô(12), ‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏(13), ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®(14)
    // Relative to newDataRaw (starts from Company index 0)
    const dateFieldsRelativeIndices = [10, 12, 13, 14];
    const formattedNewData = [...newDataRaw]; // Create a copy to modify

    for (const index of dateFieldsRelativeIndices) {
      const dateStr = formattedNewData[index];
      const dateObject = parseThaiDateToDateObject(dateStr);
      if (!dateObject) {
        return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®.)`);
      }
      formattedNewData[index] = formatDateToThaiBuddhist(dateObject);
    }

    let foundAndEdited = false;
    for (let i = 1; i < data.length; i++) {
      if (String(data[i][5]).trim() === String(oldMilitaryId).trim()) { // Column F (‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£)
        personnelSheet.getRange(i + 1, 1, 1, formattedNewData.length).setValues([formattedNewData]);
        foundAndEdited = true;
        break;
      }
    }

    if (foundAndEdited) {
      sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ "${oldMilitaryId}" ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    } else {
      sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
    }
  }
  // --- Invalid Format ---
  else {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≤‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå:
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• 1565601540|‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô|‡∏õ.2/28 (20,950.00)

üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (18 ‡∏ü‡∏¥‡∏•‡∏î‡πå):
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°>|<‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢>|<‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô>|<‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>|<‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î>|<‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á>|<‡πÄ‡∏´‡∏•‡πà‡∏≤>|<‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î>|<‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(‡∏û.‡∏®.)>|<‡∏≠‡∏≤‡∏¢‡∏∏>|<‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô(‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏(‡∏û.‡∏®.)>|<‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®(‡∏û.‡∏®.)>|<‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô>|<‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì>|<URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û>`);
  }
}

/**
 * ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• (Admin Only)
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•
 */
function handleDeletePersonnel(userId, text) {
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  }

  const militaryIdToDelete = text.replace('/‡∏•‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• ', '').trim();
  if (!militaryIdToDelete) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: /‡∏•‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• <‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£>\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡∏•‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏• 1565601540');
  }

  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const data = personnelSheet.getDataRange().getValues();

  let foundAndDeleted = false;
  for (let i = 1; i < data.length; i++) {
    if (String(data[i][5]).trim() === String(militaryIdToDelete).trim()) {
      personnelSheet.deleteRow(i + 1);
      foundAndDeleted = true;
      break;
    }
  }

  if (foundAndDeleted) {
    sendReply(userId, `‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ "${militaryIdToDelete}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
  } else {
    sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
  }
}

/**
 * ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Admin Only)
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleViewAllPersonnel(e) {
  const userId = e.source.userId;
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
  }

  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const personnel = personnelSheet.getDataRange().getValues().slice(1);

  if (personnel.length === 0) {
    return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  }

  let message = 'üë• **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î**\n\n';
  personnel.slice(0, 15).forEach((person, index) => { // ‡πÅ‡∏™‡∏î‡∏á 15 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
    // Columns: ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô(4), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5), ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î(6), ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á(7), ‡πÄ‡∏´‡∏•‡πà‡∏≤(8), ‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î(9),
    // ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î(10), ‡∏≠‡∏≤‡∏¢‡∏∏(11), ‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô(12), ‡∏ß‡∏±‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏(13), ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏®(14), ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô(15), ‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì(16), URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û(17)
    message += `${index + 1}. ${person[1]} ${person[2]} ${person[3]}\n`; // ‡∏¢‡∏® ‡∏ä‡∏∑‡πà‡∏≠ ‡∏™‡∏Å‡∏∏‡∏•
    message += `    üÜî ${person[5]} | ${person[0]} | ${person[7]}\n`; // ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£, ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢, ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    message += `    üìÖ ‡∏≠‡∏≤‡∏¢‡∏∏ ${person[11]} ‡∏õ‡∏µ | ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì ${person[16]}\n\n`; // ‡∏≠‡∏≤‡∏¢‡∏∏, ‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì
  });

  if (personnel.length > 15) {
    message += `\n... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å ${personnel.length - 15} ‡∏Ñ‡∏ô`;
  }

  sendReply(userId, message);
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Flex Message
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleCommandChildInfo(e) {
  const userId = e.source.userId;
  const militaryId = getUserMilitaryId(userId); // ‡∏î‡∏∂‡∏á‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó LOGIN
  if (!militaryId) {
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö militaryId ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
  }

  const childSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤');
  const children = childSheet.getDataRange().getValues().slice(1).filter(row => String(row[0]).trim() === String(militaryId).trim());

  if (children.length === 0) return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ');

  children.forEach(child => {
    // Columns: [0]‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£, [1]‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£, [2]‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î, [3]‡∏≠‡∏≤‡∏¢‡∏∏, [4]‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤, [5]‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô, [6]‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤, [7]‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
    sendFlexChildInfo(userId, child[1], child[2], child[3], child[4], child[5], child[6], child[7]);
  });
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Flex Message ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£
 * @param {string} userId - LINE User ID
 * @param {string} name - ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏ö‡∏∏‡∏ï‡∏£
 * @param {string} birthdate - ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ö‡∏∏‡∏ï‡∏£ (‡∏û.‡∏®.)
 * @param {string} age - ‡∏≠‡∏≤‡∏¢‡∏∏‡∏ö‡∏∏‡∏ï‡∏£
 * @param {string} educationLevel - ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
 * @param {string} grade - ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô
 * @param {string} school - ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤
 * @param {string} result - ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
 */
function sendFlexChildInfo(userId, name, birthdate, age, educationLevel, grade, school, result) {
  const flex = {
    type: "bubble",
    body: {
      type: "box",
      layout: "vertical",
      contents: [
        {
          type: "text",
          text: "üë∂ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£",
          weight: "bold",
          color: "#007bff",
          size: "lg",
          align: "center"
        },
        {
          type: "separator",
          margin: "md"
        },
        {
          type: "text",
          text: `‡∏ä‡∏∑‡πà‡∏≠: ${name}`,
          size: "md",
          wrap: true
        },
        {
          type: "text",
          text: `‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î: ${birthdate}`,
          size: "sm",
          color: "#666666"
        },
        {
          type: "text",
          text: `‡∏≠‡∏≤‡∏¢‡∏∏: ${age} ‡∏õ‡∏µ`,
          size: "sm",
          color: "#666666"
        },
        {
          type: "text",
          text: `‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ${educationLevel}`,
          size: "sm",
          color: "#666666",
          wrap: true
        },
        {
          type: "text",
          text: `‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: ${grade}`,
          size: "sm",
          color: "#666666",
          wrap: true
        },
        {
          type: "text",
          text: `‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ${school}`,
          size: "sm",
          color: "#666666",
          wrap: true
        },
        {
          type: "text",
          text: `‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${result}`,
          size: "sm",
          color: "#666666"
        }
      ]
    }
  };
  sendFlex(userId, flex);
}


/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Flex Message
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleCommandPersonnelInfo(e) {
  const userId = e.source.userId;
  const militaryId = getUserMilitaryId(userId); // ‡∏î‡∏∂‡∏á‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó LOGIN
  if (!militaryId) {
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö militaryId ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
  }

  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const pData = personnelSheet.getDataRange().getValues().slice(1);

  let foundPersonnel = false;
  for (let i = 0; i < pData.length; i++) { // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà Index 0 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ slice(1) ‡πÅ‡∏•‡πâ‡∏ß
    const data = pData[i];
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ (Index 5 ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå F)
    if (String(data[5]).trim() === String(militaryId).trim()) {
      foundPersonnel = true;

      // ‡∏î‡∏∂‡∏á URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 18 (index 17)
      const imageUrl = data[17] ? String(data[17]).trim() : "https://img5.pic.in.th/file/secure-sv1/-199a79ca217285bdf.jpg"; // URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏£‡∏≠‡∏á

      const flex = {
          type: "bubble",
          size: "giga",
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "image",
                url: imageUrl,
                size: "full",
                aspectMode: "cover",
                aspectRatio: "1:1",
                gravity: "center"
              },
              {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                paddingAll: "lg",
                contents: [
                  {
                    type: "text",
                    text: "ü™ñ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•",
                    weight: "bold",
                    color: "#1DB446",
                    size: "lg",
                    align: "center"
                  },
                  {
                    type: "separator",
                    margin: "md"
                  },
                  {
                    type: "text",
                    text: `${data[1] || ''} ${data[2] || ''} ${data[3] || ''}`,
                    weight: "bold",
                    size: "lg",
                    align: "center",
                    margin: "md"
                  },
                  {
                    type: "box",
                    layout: "vertical",
                    margin: "md",
                    spacing: "xs",
                    contents: [
                      { type: "text", text: `üìå ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢ : ${data[0] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üÜî ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ‡∏õ‡∏ä‡∏ä. : ${data[4] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `ü™ñ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ : ${data[5] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üìç ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î : ${data[6] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üéñÔ∏è ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á : ${data[7] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üî∞ ‡πÄ‡∏´‡∏•‡πà‡∏≤ : ${data[8] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üè† ‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î : ${data[9] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üéÇ ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î : ${data[10] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `‚è≥ ‡∏≠‡∏≤‡∏¢‡∏∏ : ${data[11] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} ‡∏õ‡∏µ`, size: "sm", wrap: true },
                      { type: "text", text: `üóìÔ∏è ‡∏ß‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô : ${data[12] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üóìÔ∏è ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏£‡∏à‡∏∏ : ${data[13] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üóìÔ∏è ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏á‡∏¢‡∏® : ${data[14] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô : ${data[15] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true },
                      { type: "text", text: `üìÜ ‡∏õ‡∏µ‡πÄ‡∏Å‡∏©‡∏µ‡∏¢‡∏ì : ${data[16] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`, size: "sm", wrap: true }
                    ]
                  }
                ]
              }
            ]
          },
          styles: {
            body: {
              separator: true
            }
          }
        };
      
      sendFlex(userId, flex);
      return; // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    }
  }

  // ‡∏ñ‡πâ‡∏≤‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏à‡∏ô‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!foundPersonnel) {
    sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö');
  }
}

/**
 * Helper function ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Box ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Key-Value
 * @param {string} key - ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå
 * @param {string} value - ‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 * @returns {object} Flex Message Box component
 */
function createKeyValueBox(key, value) {
  return {
    type: "box",
    layout: "horizontal",
    contents: [
      {
        type: "text",
        text: key,
        size: "sm",
        color: "#555555",
        flex: 3
      },
      {
        type: "text",
        text: value,
        size: "sm",
        color: "#111111",
        wrap: true,
        flex: 7,
        align: "end"
      }
    ]
  };
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleCommandDutyToday(e) {
  const userId = e.source.userId;
  const militaryId = getUserMilitaryId(userId);
  if (!militaryId) return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const pdata = personnelSheet.getDataRange().getValues();
  const ddata = dutySheet.getDataRange().getValues();

  let name = '';
  for (let i = 1; i < pdata.length; i++) {
    // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•": ‡∏ä‡∏∑‡πà‡∏≠(2), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5)
    if (String(pdata[i][5]).trim() === String(militaryId).trim()) {
      name = pdata[i][2]; // ‡∏ä‡∏∑‡πà‡∏≠
      break;
    }
  }
  if (!name) return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');

  const today = new Date();
  const formattedToday = formatDateToThaiBuddhist(today); // Get today's date in B.E. format

  let foundDuty = false;

  ddata.slice(1).forEach(row => {
    // Columns in "‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°": ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà(4), ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(5), ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£(6)
    if (row[0] && row[2]) {
      const dutyDateStr = String(row[0]).trim(); // Date is already stored as B.E. string
      if (dutyDateStr === formattedToday && String(row[2]).trim() === String(name).trim()) {
        const fullName = `${row[1]} ${row[2]} ${row[3]}`; // ‡∏¢‡∏® ‡∏ä‡∏∑‡πà‡∏≠ ‡∏™‡∏Å‡∏∏‡∏•
        const duty = row[4] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà';
        const company = row[5] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢';
        const phone = row[6] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£';

        sendFlexDutyReminder(userId, fullName, duty, company, phone);
        foundDuty = true;
      }
    }
  });

  if (!foundDuty) {
    sendReply(userId, '‚úÖ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°');
  }
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Flex Message ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°
 */
function sendFlexDutyReminder(userId, fullName, duty, company, phone) {
  const flex = {
    type: "bubble",
    header: {
      type: "box",
      layout: "vertical",
      contents: [
        {
          type: "text",
          text: "‚è∞ ‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
          weight: "bold",
          color: "#ffffff",
          size: "lg",
          align: "center"
        }
      ],
      backgroundColor: "#FF5722", // ‡∏™‡∏µ‡∏™‡πâ‡∏°
      paddingAll: "md"
    },
    body: {
      type: "box",
      layout: "vertical",
      spacing: "md",
      contents: [
        {
          type: "text",
          text: `üë§ ${fullName}`,
          weight: "bold",
          size: "md",
          align: "center"
        },
        {
          type: "separator",
          margin: "md"
        },
        createKeyValueBox("‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà", duty),
        createKeyValueBox("‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢", company),
        createKeyValueBox("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£", phone)
      ]
    }
  };
  sendFlex(userId, flex);
}


/**
 * ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleMonthlyDuty(e) {
  const userId = e.source.userId;
  const militaryId = getUserMilitaryId(userId);
  if (!militaryId) return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const pdata = personnelSheet.getDataRange().getValues();
  const ddata = dutySheet.getDataRange().getValues();

  let name = '';
  for (let i = 1; i < pdata.length; i++) {
    // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•": ‡∏ä‡∏∑‡πà‡∏≠(2), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5)
    if (String(pdata[i][5]).trim() === String(militaryId).trim()) {
      name = pdata[i][2]; // ‡∏ä‡∏∑‡πà‡∏≠
      break;
    }
  }
  if (!name) return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');

  const currentMonth = new Date().getMonth() + 1;
  const currentYear = new Date().getFullYear();
  const monthlyDuties = [];

  ddata.slice(1).forEach(row => {
    // Columns in "‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°": ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà(4), ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(5), ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£(6)
    if (row[0] && row[2]) {
      const dutyDate = parseThaiDateToDateObject(String(row[0]).trim()); // Parse B.E. string to Date object

      if (dutyDate &&
          dutyDate.getMonth() + 1 === currentMonth &&
          dutyDate.getFullYear() === currentYear &&
          String(row[2]).trim() === String(name).trim()) { // Check against "‡∏ä‡∏∑‡πà‡∏≠" column
        monthlyDuties.push({
          date: formatDateToThaiBuddhist(dutyDate), // Output as B.E.
          rank: row[1] || '', // ‡∏¢‡∏®
          position: row[4] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà', // ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
          company: row[5] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢', // ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢
          phone: row[6] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£' // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
        });
      }
    }
  });

  if (monthlyDuties.length === 0) {
    return sendReply(userId, 'üìÖ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°');
  }

  const monthNames = ['‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô',
                      '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'];

  const flex = {
    type: 'bubble',
    size: 'mega',
    header: {
      type: 'box',
      layout: 'vertical',
      contents: [
        { type: 'text', text: `üìÖ ‡πÄ‡∏ß‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô${monthNames[currentMonth-1]}`, weight: 'bold', color: '#ffffff', size: 'lg' }
      ],
      backgroundColor: '#FF9800'
    },
    body: {
      type: 'box',
      layout: 'vertical',
      spacing: 'md',
      contents: [
        { type: 'text', text: `üë§ ${monthlyDuties[0].rank} ${name}`, weight: 'bold', size: 'md' },
        { type: 'separator', margin: 'md' },
        ...monthlyDuties.map(duty => ({
          type: 'box',
          layout: 'vertical',
          margin: 'sm',
          contents: [
            { type: 'text', text: `üìÖ ${duty.date}`, size: 'sm', weight: 'bold' },
            { type: 'text', text: `üìç ${duty.position}`, size: 'xs', color: '#666666' },
            { type: 'text', text: `üè¢ ${duty.company}`, size: 'xs', color: '#666666' },
            { type: 'text', text: `‚òéÔ∏è ${duty.phone}`, size: 'xs', color: '#666666' }
          ]
        }))
      ]
    }
  };

  sendFlex(userId, flex);
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏ß‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handlePastDuties(e) {
  const userId = e.source.userId;
  const militaryId = getUserMilitaryId(userId);
  if (!militaryId) return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const pdata = personnelSheet.getDataRange().getValues();
  const ddata = dutySheet.getDataRange().getValues();

  let name = '';
  for (let i = 1; i < pdata.length; i++) {
    // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•": ‡∏ä‡∏∑‡πà‡∏≠(2), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5)
    if (String(pdata[i][5]).trim() === String(militaryId).trim()) {
      name = pdata[i][2]; // ‡∏ä‡∏∑‡πà‡∏≠
      break;
    }
  }
  if (!name) return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');

  const today = new Date();
  const pastDuties = [];

  ddata.slice(1).forEach(row => {
    // Columns in "‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°": ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà(4), ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(5), ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£(6)
    if (row[0] && row[2]) {
      const dutyDate = parseThaiDateToDateObject(String(row[0]).trim()); // Parse B.E. string to Date object

      if (dutyDate && dutyDate < today && String(row[2]).trim() === String(name).trim()) { // Check against "‡∏ä‡∏∑‡πà‡∏≠" column
        pastDuties.push({
          date: formatDateToThaiBuddhist(dutyDate), // Output as B.E.
          position: row[4] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà', // ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
          company: row[5] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢', // ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢
          phone: row[6] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£', // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
          sortDate: dutyDate
        });
      }
    }
  });

  pastDuties.sort((a, b) => b.sortDate - a.sortDate);
  const recentDuties = pastDuties.slice(0, 10);

  if (recentDuties.length === 0) {
    return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏ß‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á');
  }

  const flex = {
    type: 'bubble',
    size: 'mega',
    header: {
      type: 'box',
      layout: 'vertical',
      contents: [
        { type: 'text', text: 'üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏ß‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á', weight: 'bold', color: '#ffffff', size: 'lg' }
      ],
      backgroundColor: '#9C27B0'
    },
    body: {
      type: 'box',
      layout: 'vertical',
      spacing: 'sm',
      contents: [
        { type: 'text', text: `üë§ ${name}`, weight: 'bold', size: 'md' },
        { type: 'separator', margin: 'md' },
        ...recentDuties.map(duty => ({
          type: 'box',
          layout: 'vertical',
          margin: 'xs',
          contents: [
            { type: 'text', text: `üìÖ ${duty.date} - ${duty.position}`, size: 'sm' },
            { type: 'text', text: `üè¢ ${duty.company}`, size: 'xs', color: '#666666' }
          ]
        }))
      ]
    }
  };

  sendFlex(userId, flex);
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢ (Admin Only)
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleCompanyChildrenReport(e) {
  const userId = e.source.userId;
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ');
  }

  const childSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤');
  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');

  if (!childSheet) {
    return sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ó "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏µ‡∏ó');
  }
  if (!personnelSheet) {
    return sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ó "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏µ‡∏ó');
  }

  const childData = childSheet.getDataRange().getValues();
  const personnelData = personnelSheet.getDataRange().getValues();

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡∏µ‡∏ó‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö‡πÅ‡∏ñ‡∏ß header)
  if (childData.length <= 1 && personnelData.length <= 1) {
    return sendReply(userId, 'üì≠ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô');
  }
  
  // Skip header rows
  const children = childData.slice(1);
  const personnel = personnelData.slice(1);


  let report = 'üìä **‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏ï‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢**\n\n';
  let totalChildren = 0;
  let schoolAgeChildren = 0;

  // Group children by military ID
  const childrenByMilitaryId = {};
  children.forEach(child => {
    // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤": ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£(0)
    if (child[0]) {
      const militaryId = String(child[0]).trim();
      if (!childrenByMilitaryId[militaryId]) {
        childrenByMilitaryId[militaryId] = [];
      }
      childrenByMilitaryId[militaryId].push(child);
    }
  });

  // Iterate through personnel to find their children
  if (personnel.length === 0) {
      report += '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö\n\n';
  }

  personnel.forEach(person => {
    // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•": ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5)
    if (person[5]) {
        const militaryId = String(person[5]).trim();
        const rank = person[1];
        const firstName = person[2];
        const lastName = person[3];
        const company = person[0];

        report += `**${rank || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏¢‡∏®'} ${firstName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠'} ${lastName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏Å‡∏∏‡∏•'} (${company || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢'})**\n`;
        const childrenOfThisPersonnel = childrenByMilitaryId[militaryId] || [];

        if (childrenOfThisPersonnel.length > 0) {
            childrenOfThisPersonnel.forEach((child, index) => {
                // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤": ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ö‡∏∏‡∏ï‡∏£(1), ‡∏≠‡∏≤‡∏¢‡∏∏(3), ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤(4), ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤(6)
                const childName = child[1] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠';
                const childAge = parseInt(child[3], 10) || 0;
                const childEducationLevel = child[4] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
                const childSchool = child[6] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';

                report += `  ${index + 1}. ${childName} (‡∏≠‡∏≤‡∏¢‡∏∏ ${childAge} ‡∏õ‡∏µ)\n`;
                report += `     ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ${childEducationLevel}, ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${childSchool}\n`;

                totalChildren++;
                if (childAge >= 6 && childAge <= 18) { // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ä‡πà‡∏ß‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                    schoolAgeChildren++;
                }
            });
        } else {
            report += `  - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£\n`;
        }
        report += '\n'; // Add a blank line for readability between personnel
    } else {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ militaryId ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏Ñ‡∏ô‡∏ô‡∏±‡πâ‡∏ô
        const rank = person[1];
        const firstName = person[2];
        const lastName = person[3];
        report += `**${rank || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏¢‡∏®'} ${firstName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠'} ${lastName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏Å‡∏∏‡∏•'} (‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£)**\n`;
        report += `  - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£\n\n`;
    }
  });

  report += `---
**‡∏™‡∏£‡∏∏‡∏õ:**
‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏∏‡∏ï‡∏£‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalChildren} ‡∏Ñ‡∏ô
‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏∏‡∏ï‡∏£‡∏ß‡∏±‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (6-18 ‡∏õ‡∏µ): ${schoolAgeChildren} ‡∏Ñ‡∏ô`;

  sendReply(userId, report);
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Admin Only)
 * @param {object} e - Event object ‡∏à‡∏≤‡∏Å LINE
 */
function handleGenerateReport(e) {
  const userId = e.source.userId;
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ');
  }

  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const childSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏ï‡∏£-‡∏ò‡∏¥‡∏î‡∏≤');
  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const commandSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ'); // New sheet for commands

  const totalPersonnel = personnelSheet ? personnelSheet.getLastRow() - 1 : 0; // ‡∏•‡∏ö Header
  const totalChildren = childSheet ? childSheet.getLastRow() - 1 : 0; // ‡∏•‡∏ö Header
  const totalDuties = dutySheet ? dutySheet.getLastRow() - 1 : 0; // ‡∏•‡∏ö Header
  const totalCommands = commandSheet ? commandSheet.getLastRow() - 1 : 0; // New: total commands

  let report = `üìä **‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•**\n\n`;
  report += `üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalPersonnel} ‡∏ô‡∏≤‡∏¢\n`;
  report += `üë∂ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏∏‡∏ï‡∏£‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalChildren} ‡∏Ñ‡∏ô\n`;
  report += `üõ°Ô∏è ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ${totalDuties} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
  report += `üìú ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ${totalCommands} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n`; // New
  report += `(‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡πÑ‡∏î‡πâ)`;

  sendReply(userId, report);
}


/**
 * ‡∏î‡∏∂‡∏á‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó LOGIN
 * @param {string} userId - LINE User ID
 * @returns {string|null} ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ null ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö
 */
function getUserMilitaryId(userId) {
  const loginSheet = SpreadsheetApp.getActive().getSheetByName('LOGIN');
  const loginData = loginSheet.getDataRange().getValues();
  // Columns in "LOGIN": User ID(0), Military ID(1)
  for (let i = 1; i < loginData.length; i++) {
    if (loginData[i][0] === userId) {
      return String(loginData[i][1]).trim();
    }
  }
  return null;
}

/**
 * ‡∏î‡∏∂‡∏á‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏¢‡∏®
 * @param {string} rank - ‡∏¢‡∏®
 * @param {string} firstName - ‡∏ä‡∏∑‡πà‡∏≠
 * @param {string} lastName - ‡∏™‡∏Å‡∏∏‡∏•
 * @returns {string|null} ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ null ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö
 */
function getMilitaryIdByPersonnelName(rank, firstName, lastName) {
  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const pData = personnelSheet.getDataRange().getValues();
  // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•": ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5)
  for (let i = 1; i < pData.length; i++) {
    if (String(pData[i][1]).trim() === String(rank).trim() &&
        String(pData[i][2]).trim() === String(firstName).trim() &&
        String(pData[i][3]).trim() === String(lastName).trim()) {
      return String(pData[i][5]).trim(); // ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£
    }
  }
  return null;
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏î‡∏¢‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó ADMIN
 * @param {string} userId - LINE User ID
 * @returns {boolean} true ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö, false ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà
 */
function checkAdminPermission(userId) {
  try {
    const adminSheet = SpreadsheetApp.getActive().getSheetByName('ADMIN');
    if (!adminSheet) {
      Logger.log('Error: Sheet named "ADMIN" not found.');
      return false; // ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡πá‡πÑ‡∏î‡πâ
    }
    const adminData = adminSheet.getDataRange().getValues();
    // Assuming userId is in the first column (index 0) of the ADMIN sheet
    const adminUserIds = adminData.slice(1).map(row => String(row[0]).trim()); // Skip header, convert to string and trim

    return adminUserIds.includes(String(userId).trim());
  } catch (e) {
    Logger.log(`Error checking admin permission: ${e.message}`);
    return false;
  }
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Trigger (‡∏£‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Trigger)
 */
function createDailyDutyReminderTrigger() {
  // ‡∏•‡∏ö Trigger ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const triggers = ScriptApp.getProjectTriggers();
  for (let i = 0; i < triggers.length; i++) {
    if (triggers[i].getHandlerFunction() === 'sendDailyDutyReminder') {
      ScriptApp.deleteTrigger(triggers[i]);
    }
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Trigger ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 7:00 AM ‡∏ñ‡∏∂‡∏á 8:00 AM (‡πÄ‡∏ß‡∏•‡∏≤ Asia/Bangkok)
  ScriptApp.newTrigger('sendDailyDutyReminder')
    .timeBased()
    .everyDays(1)
    .atHour(7) // ‡∏£‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 07:00 ‡∏ô.
    .nearMinute(30) // ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 07:30 ‡∏ô. (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ)
    .inTimezone('Asia/Bangkok') // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 'Asia/Bangkok' ‡∏´‡∏≤‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤
    .create();

  Logger.log('Daily duty reminder trigger created successfully.');
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô (‡∏£‡∏±‡∏ô‡πÇ‡∏î‡∏¢ Trigger)
 */
function sendDailyDutyReminder() {
  const dutySheet = SpreadsheetApp.getActive().getSheetByName('‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°');
  const ddata = dutySheet.getDataRange().getValues();
  
  const today = new Date();
  const formattedToday = formatDateToThaiBuddhist(today); // Get today's date in B.E. format for comparison

  const loginSheet = SpreadsheetApp.getActive().getSheetByName('LOGIN');
  const loginData = loginSheet.getDataRange().getValues();
  const militaryIdToUserId = {};
  loginData.slice(1).forEach(row => {
    // Columns in "LOGIN": User ID(0), Military ID(1)
    militaryIdToUserId[String(row[1]).trim()] = String(row[0]).trim(); // Map militaryId to userId
  });

  ddata.slice(1).forEach(row => {
    // Columns in "‡πÄ‡∏ß‡∏£ - ‡∏¢‡∏≤‡∏°": ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(0), ‡∏¢‡∏®(1), ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà(4), ‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢(5), ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£(6)
    if (row[0] && row[2]) {
      const dutyDateStr = String(row[0]).trim(); // Date is already stored as B.E. string

      if (dutyDateStr === formattedToday) {
        const rank = row[1];
        const firstName = row[2];
        const lastName = row[3];
        const duty = row[4] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà';
        const company = row[5] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏¢';
        const phone = row[6] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£';

        // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ militaryId ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•
        const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
        const pData = personnelSheet.getDataRange().getValues();
        let militaryIdFound = null;
        for (let i = 1; i < pData.length; i++) {
          // Columns in "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•": ‡∏ä‡∏∑‡πà‡∏≠(2), ‡∏™‡∏Å‡∏∏‡∏•(3), ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£(5)
          if (String(pData[i][2]).trim() === String(firstName).trim() && String(pData[i][3]).trim() === String(lastName).trim()) {
            militaryIdFound = String(pData[i][5]).trim(); // ‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£
            break;
          }
        }

        if (militaryIdFound && militaryIdToUserId[militaryIdFound]) {
          const targetUserId = militaryIdToUserId[militaryIdFound];
          const fullName = `${rank} ${firstName} ${lastName}`;
          sendFlexDutyReminder(targetUserId, fullName, duty, company, phone);
        } else {
          Logger.log(`‡πÑ‡∏°‡πà‡∏û‡∏ö LINE User ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${firstName} ${lastName} (‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£: ${militaryIdFound})`);
        }
      }
    }
  });
}

// ====================================================================
// NEW FEATURES: Command Book Management
// ====================================================================

/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 * ‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå "‡∏¢‡∏®|‡∏ä‡∏∑‡πà‡∏≠|‡∏™‡∏Å‡∏∏‡∏•" ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÜ
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 */
function handleAddCommand(userId, text) {
  const currentUserMilitaryId = getUserMilitaryId(userId);
  if (!currentUserMilitaryId) {
    return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
  }

  const parts = text.replace('/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ', '').split('|');
  // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ": ‡∏¢‡∏®(0), ‡∏ä‡∏∑‡πà‡∏≠(1), ‡∏™‡∏Å‡∏∏‡∏•(2), ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á(3), ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà(4), ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(5), ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á(6)
  if (parts.length !== 7) {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏¢‡∏®>|<‡∏ä‡∏∑‡πà‡∏≠>|<‡∏™‡∏Å‡∏∏‡∏•>|<‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á>|<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>|<‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á>

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏à.‡∏™.‡∏≠.|‡∏™‡∏°‡∏ä‡∏≤‡∏¢|‡πÉ‡∏à‡∏î‡∏µ|‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏£‡∏¢‡∏≤‡∏°|‡∏ö‡∏Å.001/2568|25/07/2568|https://drive.google.com/link-to-file.pdf`);
  }

  const [rank, firstName, lastName, commandList, commandNumber, dateStr, fileLink] = parts.map(p => p.trim());

  // Check if the current user is the "owner" (i.e., the person named in the command)
  const namedPersonMilitaryId = getMilitaryIdByPersonnelName(rank, firstName, lastName);
  if (!namedPersonMilitaryId || String(currentUserMilitaryId).trim() !== String(namedPersonMilitaryId).trim()) {
    return sendReply(userId, `‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ
‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ‡∏¢‡∏® ‡∏ä‡∏∑‡πà‡∏≠ ‡∏™‡∏Å‡∏∏‡∏• ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ`);
  }

  // Validate date format
  const commandDate = parseThaiDateToDateObject(dateStr);
  if (!commandDate) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/07/2568)');
  }
  const formattedDate = formatDateToThaiBuddhist(commandDate);

  const commandSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ');
  // Check for duplicate command number and date
  const data = commandSheet.getDataRange().getValues();
  for (let i = 1; i < data.length; i++) {
    // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ": ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà(4), ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(5)
    if (String(data[i][4]).trim() === String(commandNumber).trim() && String(data[i][5]).trim() === formattedDate) {
      return sendReply(userId, `‚ùå ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${commandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß`);
    }
  }

  commandSheet.appendRow([rank, firstName, lastName, commandList, commandNumber, formattedDate, fileLink]);
  sendReply(userId, `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "${commandList}" (‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${commandNumber}) ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
}

/**
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 * ‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå "‡∏¢‡∏®|‡∏ä‡∏∑‡πà‡∏≠|‡∏™‡∏Å‡∏∏‡∏•" ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡πÜ
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 */
function handleEditCommand(userId, text) {
  const currentUserMilitaryId = getUserMilitaryId(userId);
  if (!currentUserMilitaryId) {
    return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
  }

  const cleanText = text.replace('/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ', '');
  const parts = cleanText.split('|');

  const commandSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ');
  const data = commandSheet.getDataRange().getValues();

  // Define a mapping from user-friendly field names to column indices (0-based)
  // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ": ‡∏¢‡∏®(0), ‡∏ä‡∏∑‡πà‡∏≠(1), ‡∏™‡∏Å‡∏∏‡∏•(2), ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á(3), ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà(4), ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(5), ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á(6)
  const commandFieldMap = {
    "‡∏¢‡∏®": 0,
    "‡∏ä‡∏∑‡πà‡∏≠": 1,
    "‡∏™‡∏Å‡∏∏‡∏•": 2,
    "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á": 3,
    "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà": 4,
    "‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà": 5,
    "‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á": 6
  };

  // --- Handle Partial Update (4 parts: oldCommandNumber | oldDateStr | fieldName | newValue) ---
  if (parts.length === 4) {
    const [oldCommandNumber, oldDateStr, fieldName, newValueRaw] = parts.map(p => p.trim());

    if (!oldCommandNumber || !oldDateStr || !fieldName || newValueRaw === undefined) {
      return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>`);
    }

    const oldCommandDate = parseThaiDateToDateObject(oldDateStr);
    if (!oldCommandDate) {
      return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/07/2568)');
    }
    const formattedOldDate = formatDateToThaiBuddhist(oldCommandDate);

    const colIndex = commandFieldMap[fieldName];
    if (colIndex === undefined) {
      return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
    }

    let foundRowIndex = -1;
    let existingRank = '';
    let existingFirstName = '';
    let existingLastName = '';

    for (let i = 1; i < data.length; i++) {
      if (String(data[i][4]).trim() === String(oldCommandNumber).trim() && String(data[i][5]).trim() === formattedOldDate) {
        foundRowIndex = i;
        existingRank = data[i][0];
        existingFirstName = data[i][1];
        existingLastName = data[i][2];
        break;
      }
    }

    if (foundRowIndex === -1) {
      return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${oldCommandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedOldDate} ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏`);
    }

    // Check ownership before editing
    const existingOwnerMilitaryId = getMilitaryIdByPersonnelName(existingRank, existingFirstName, existingLastName);
    if (!existingOwnerMilitaryId || String(currentUserMilitaryId).trim() !== String(existingOwnerMilitaryId).trim()) {
      return sendReply(userId, `‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô`);
    }

    let newValue = newValueRaw;
    // Special handling for date field if "‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà" is being changed
    if (fieldName === "‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà") {
      const newDate = parseThaiDateToDateObject(newValueRaw);
      if (!newDate) {
        return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 26/07/2568)');
      }
      newValue = formatDateToThaiBuddhist(newDate);
    }
    // Special handling for rank, first name, last name fields (to ensure consistency if owner is changed)
    if (["‡∏¢‡∏®", "‡∏ä‡∏∑‡πà‡∏≠", "‡∏™‡∏Å‡∏∏‡∏•"].includes(fieldName)) {
      // If the owner fields are changed, we need to re-verify ownership or handle transfer
      // For simplicity, we'll assume the current user (original owner) can change their own details.
      // If this changes the *owner* to someone else, that new owner won't be able to edit it unless they log in as them.
      // It's safer to not allow direct change of owner fields this way if strict ownership is desired.
      // However, the prompt implies "‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", so if the current user is the owner, they can edit anything.
      // So, if rank, name, surname are changed, the new value will be set.
    }


    commandSheet.getRange(foundRowIndex + 1, colIndex + 1).setValue(newValue);
    sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${oldCommandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedOldDate} ‡∏ü‡∏¥‡∏•‡∏î‡πå "${fieldName}" ‡πÄ‡∏õ‡πá‡∏ô "${newValueRaw}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);

  }
  // --- Handle Full Row Update (9 parts) ---
  else if (parts.length === 9) { // 2 (old identify) + 7 (new fields) = 9
    const [oldCommandNumber, oldDateStr, newRank, newFirstName, newLastName, newCommandList, newCommandNumber, newDateStrFormatted, newFileLink] = parts.map(p => p.trim());

    // Validate old and new dates
    const oldCommandDate = parseThaiDateToDateObject(oldDateStr);
    if (!oldCommandDate) {
      return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/07/2568)');
    }
    const formattedOldDate = formatDateToThaiBuddhist(oldCommandDate);

    const newCommandDate = parseThaiDateToDateObject(newDateStrFormatted);
    if (!newCommandDate) {
      return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 26/07/2568)');
    }
    const formattedNewDate = formatDateToThaiBuddhist(newCommandDate);

    let foundRowIndex = -1;
    let existingRank = '';
    let existingFirstName = '';
    let existingLastName = '';

    for (let i = 1; i < data.length; i++) {
      // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ": ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà(4), ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(5), ‡∏¢‡∏®(0), ‡∏ä‡∏∑‡πà‡∏≠(1), ‡∏™‡∏Å‡∏∏‡∏•(2)
      if (String(data[i][4]).trim() === String(oldCommandNumber).trim() && String(data[i][5]).trim() === formattedOldDate) {
        foundRowIndex = i;
        existingRank = data[i][0];
        existingFirstName = data[i][1];
        existingLastName = data[i][2];
        break;
      }
    }

    if (foundRowIndex === -1) {
      return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${oldCommandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedOldDate} ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏`);
    }

    // Check ownership before editing (must be original owner)
    const existingOwnerMilitaryId = getMilitaryIdByPersonnelName(existingRank, existingFirstName, existingLastName);
    if (!existingOwnerMilitaryId || String(currentUserMilitaryId).trim() !== String(existingOwnerMilitaryId).trim()) {
      return sendReply(userId, `‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô`);
    }

    // If a new owner is specified in the update, check if the current user is also the new owner (or an admin)
    const newOwnerMilitaryId = getMilitaryIdByPersonnelName(newRank, newFirstName, newLastName);
    if (!newOwnerMilitaryId) {
      return sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡∏¢‡∏® ‡∏ä‡∏∑‡πà‡∏≠ ‡∏™‡∏Å‡∏∏‡∏• ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏');
    }
    if (String(currentUserMilitaryId).trim() !== String(newOwnerMilitaryId).trim()) {
       return sendReply(userId, `‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏≠‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏¢‡∏® ‡∏ä‡∏∑‡πà‡∏≠ ‡∏™‡∏Å‡∏∏‡∏• ‡πÉ‡∏´‡∏°‡πà ‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà`);
    }


    // Prepare new data array
    const newData = [newRank, newFirstName, newLastName, newCommandList, newCommandNumber, formattedNewDate, newFileLink];
    commandSheet.getRange(foundRowIndex + 1, 1, 1, newData.length).setValues([newData]);
    
    sendReply(userId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${oldCommandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedOldDate} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);

  }
  // --- Invalid Format ---
  else {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏≤‡∏á‡∏ü‡∏¥‡∏•‡∏î‡πå:
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå>|<‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà>
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ö‡∏Å.001/2568|25/07/2568|‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á|‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:
/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°(‡∏û.‡∏®.)>|<‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà>|<‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà>|<‡∏™‡∏Å‡∏∏‡∏•‡πÉ‡∏´‡∏°‡πà>|<‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà>|<‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà(‡∏û.‡∏®.)>|<‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà>`);
  }
}

/**
 * ‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á (Admin Only)
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 */
function handleDeleteCommand(userId, text) {
  if (!checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á');
  }

  const parts = text.replace('/‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ', '').split('|');
  // Expected: ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà | ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  if (parts.length !== 2) {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:
/‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
/‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ö‡∏Å.001/2568|25/07/2568`);
  }

  const [commandNumber, dateStr] = parts.map(p => p.trim());

  // Validate date format
  const commandDate = parseThaiDateToDateObject(dateStr);
  if (!commandDate) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/07/2568)');
  }
  const formattedDate = formatDateToThaiBuddhist(commandDate);

  const commandSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ');
  const data = commandSheet.getDataRange().getValues();

  let foundAndDeleted = false;
  for (let i = 1; i < data.length; i++) {
    // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ": ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà(4), ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(5)
    if (String(data[i][4]).trim() === String(commandNumber).trim() && String(data[i][5]).trim() === formattedDate) {
      commandSheet.deleteRow(i + 1);
      foundAndDeleted = true;
      break;
    }
  }

  if (foundAndDeleted) {
    sendReply(userId, `‚úÖ ‡∏•‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${commandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
  } else {
    sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${commandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏`);
  }
}

/**
 * ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 */
function handleSearchCommand(userId, text) {
  const keyword = text.replace('/‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ', '').trim().toLowerCase();
  if (!keyword) {
    return sendReply(userId, '‚ùó ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á');
  }

  const commandSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ');
  if (!commandSheet) {
    return sendReply(userId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ó "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ"');
  }
  const allCommands = commandSheet.getDataRange().getValues().slice(1); // Skip header row

  const matchingCommands = [];
  allCommands.forEach(row => {
    // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ":
    // [0]‡∏¢‡∏®, [1]‡∏ä‡∏∑‡πà‡∏≠, [2]‡∏™‡∏Å‡∏∏‡∏•, [3]‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á, [4]‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà, [5]‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà, [6]‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á

    // Concatenate relevant fields for searching (lowercase for case-insensitive search)
    const searchableText = `${row[0]} ${row[1]} ${row[2]} ${row[3]} ${row[4]}`.toLowerCase();
    if (searchableText.includes(keyword)) {
      matchingCommands.push(row);
    }
  });

  if (matchingCommands.length === 0) {
    return sendReply(userId, `üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î "${keyword}"`);
  }

  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö
  sendReply(userId, `üìú ‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á ${matchingCommands.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "${keyword}"`);

  // ‡∏™‡πà‡∏á Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ Line ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ)
  matchingCommands.slice(0, 10).forEach(commandRow => {
    const rank = commandRow[0] || '';
    const firstName = commandRow[1] || '';
    const lastName = commandRow[2] || '';
    const commandList = commandRow[3] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'; // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
    const commandNumber = commandRow[4] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á'; // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà
    const date = commandRow[5] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'; // ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (already in B.E.)
    const fileLink = commandRow[6] || ''; // ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á

    sendFlexCommandInfo(userId, rank, firstName, lastName, commandList, commandNumber, date, fileLink);
  });
  
  if (matchingCommands.length > 10) {
    sendReply(userId, `...‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏µ‡∏Å ${matchingCommands.length - 10} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î‡πÉ‡∏´‡πâ‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏∂‡πâ‡∏ô`);
  }
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Flex Message ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 * @param {string} userId - LINE User ID
 * @param {string} rank - ‡∏¢‡∏®
 * @param {string} firstName - ‡∏ä‡∏∑‡πà‡∏≠
 * @param {string} lastName - ‡∏™‡∏Å‡∏∏‡∏•
 * @param {string} commandList - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 * @param {string} commandNumber - ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á (‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà)
 * @param {string} date - ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡∏û.‡∏®.)
 * @param {string} fileLink - ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 */
function sendFlexCommandInfo(userId, rank, firstName, lastName, commandList, commandNumber, date, fileLink) {
  const flexContents = {
    type: "bubble",
    size: "giga",
    header: {
      type: "box",
      layout: "vertical",
      contents: [
        {
          type: "text",
          text: "üìú ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á",
          weight: "bold",
          color: "#ffffff",
          size: "lg",
          align: "center"
        }
      ],
      backgroundColor: "#4CAF50", // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
      paddingAll: "md"
    },
    body: {
      type: "box",
      layout: "vertical",
      spacing: "sm",
      paddingAll: "xl",
      contents: [
        {
          type: "text",
          text: `${rank} ${firstName} ${lastName}`,
          weight: "bold",
          size: "md",
          wrap: true,
          color: "#333333"
        },
        {
          type: "separator",
          margin: "md",
          color: "#eeeeee"
        },
        createKeyValueBox("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", commandList),
        createKeyValueBox("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà", commandNumber),
        createKeyValueBox("‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà", date)
      ]
    },
    footer: {
      type: "box",
      layout: "vertical",
      spacing: "sm",
      contents: [] // ‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ fileLink
    }
  };

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á" ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå
  if (fileLink && fileLink.startsWith('http')) { // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô URL ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    flexContents.footer.contents.push({
      type: "button",
      style: "primary",
      height: "sm",
      action: {
        type: "uri",
        label: "üîó ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á",
        uri: fileLink
      }
    });
  } else {
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á
    flexContents.footer.contents.push({
      type: "text",
      text: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á",
      size: "sm",
      color: "#999999",
      align: "center"
    });
  }

  sendFlex(userId, flexContents);
}

// ====================================================================
// NEW FILE UPLOAD FUNCTIONS
// ====================================================================

/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏ü‡∏•‡πå
 * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å messageId ‡∏•‡∏á Cache ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á
 * @param {string} userId - LINE User ID
 * @param {string} messageId - ID ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡πÑ‡∏ü‡∏•‡πå
 * @param {string} messageType - 'image' ‡∏´‡∏£‡∏∑‡∏≠ 'file'
 * @param {string} fileName - ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
 * @param {object} contentProvider - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• provider ‡∏Ç‡∏≠‡∏á content
 */
function handleIncomingFileOrImage(userId, messageId, messageType, fileName, contentProvider) {
  // Store the message ID in Cache Service for later retrieval by a specific command
  CacheService.getUserCache().put(userId + '_lastMessageId', messageId, 300); // Expires in 5 minutes
  CacheService.getUserCache().put(userId + '_lastMessageType', messageType, 300);
  CacheService.getUserCache().put(userId + '_lastFileName', fileName || 'unknown_file', 300); // Store file name if available

  sendReply(userId, `‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ${messageType === 'image' ? '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û' : '‡πÑ‡∏ü‡∏•‡πå'} ‡πÅ‡∏•‡πâ‡∏ß!
‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á:
üñºÔ∏è ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: /‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå <‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£>
üìú ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: /‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>`);
}

/**
 * ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å LINE Messaging API
 * @param {string} messageId - ID ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå
 * @returns {GoogleAppsScript.Base.Blob} ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Blob
 */
function fetchFileFromLine(messageId) {
  const url = `https://api-data.line.me/v2/bot/message/${messageId}/content`;
  const options = {
    headers: {
      'Authorization': 'Bearer ' + CHANNEL_ACCESS_TOKEN
    },
    method: 'get',
    muteHttpExceptions: true
  };
  const response = UrlFetchApp.fetch(url, options);
  const responseCode = response.getResponseCode();

  if (responseCode === 200) {
    return response.getBlob();
  } else {
    const errorBody = response.getContentText();
    Logger.log(`Error fetching file from Line: ${responseCode} - ${errorBody}`);
    throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å LINE ‡πÑ‡∏î‡πâ: ‡∏£‡∏´‡∏±‡∏™ ${responseCode}`);
  }
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î Blob ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Drive ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
 * @param {string} fileName - ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Drive
 * @param {GoogleAppsScript.Base.Blob} blob - ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Blob
 * @param {string} folderName - ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô Google Drive ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå
 * @returns {string} URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏£‡∏∑‡∏≠ null ‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
 */
function uploadFileToDrive(fileName, blob, folderName) {
  try {
    if (!blob || !blob.getBytes || blob.getBytes().length === 0) {
      throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• blob ‡∏´‡∏£‡∏∑‡∏≠ blob ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤");
    }

    const parentFolder = getOrCreateDriveFolder(folderName);
    const file = parentFolder.createFile(blob.setName(fileName));

    if (!file) {
      throw new Error("‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }

    file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW); // VIEW ‡πÅ‡∏ó‡∏ô VIEWER

    const fileId = file.getId();

    return {
      fileUrl: file.getUrl(),
      imageUrl: `https://drive.google.com/uc?export=view&id=${fileId}`
    };

  } catch (e) {
    Logger.log(`Error uploading file to Drive: ${e.message}`);
    throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏∂‡πâ‡∏ô Google Drive ‡πÑ‡∏î‡πâ: ${e.message}`);
  }
}


/**
 * ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô Google Drive
 * @param {string} folderName - ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
 * @returns {GoogleAppsScript.Drive.Folder} ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
 */
function getOrCreateDriveFolder(folderName) {
  const folders = DriveApp.getFoldersByName(folderName);
  if (folders.hasNext()) {
    return folders.next();
  } else {
    return DriveApp.createFolder(folderName);
  }
}

/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå <‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£>
 */
function handleSetProfilePicture(userId, text) {
  const currentUserMilitaryId = getUserMilitaryId(userId);
  if (!currentUserMilitaryId) {
    return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
  }

  const targetMilitaryId = text.replace('/‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ', '').trim();
  if (!targetMilitaryId) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: /‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå <‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£>\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: /‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå 1565601540');
  }

  if (String(currentUserMilitaryId).trim() !== String(targetMilitaryId).trim() && !checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô');
  }

  const lastMessageId = CacheService.getUserCache().get(userId + '_lastMessageId');
  const lastMessageType = CacheService.getUserCache().get(userId + '_lastMessageType');
  const lastFileName = CacheService.getUserCache().get(userId + '_lastFileName');

  if (!lastMessageId || lastMessageType !== 'image') {
    return sendReply(userId, '‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ');
  }

  const personnelSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•');
  const data = personnelSheet.getDataRange().getValues();
  let foundRowIndex = -1;

  for (let i = 1; i < data.length; i++) {
    if (String(data[i][5]).trim() === String(targetMilitaryId).trim()) {
      foundRowIndex = i;
      break;
    }
  }

  if (foundRowIndex === -1) {
    return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ "${targetMilitaryId}" ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏`);
  }

  try {
    sendReply(userId, '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...');
    const imageBlob = fetchFileFromLine(lastMessageId);

    // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á fileUrl ‡πÅ‡∏•‡∏∞ imageUrl ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
    const result = uploadFileToDrive(
      `profile_${targetMilitaryId}_${lastFileName}`,
      imageBlob,
      PROFILE_PICTURE_FOLDER_NAME
    );

    // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå R (18) = ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå | ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå S (19) = ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    const row = foundRowIndex + 1;
    personnelSheet.getRange(row, 18).setValue(result.fileUrl); // ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå
    personnelSheet.getRange(row, 19).setFormula(`=IMAGE("${result.imageUrl}")`); // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ

    // Clear cache
    const userCache = CacheService.getUserCache();
    userCache.remove(userId + '_lastMessageId');
    userCache.remove(userId + '_lastMessageType');
    userCache.remove(userId + '_lastFileName');

    sendReply(userId, `‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏ó‡∏´‡∏≤‡∏£ "${targetMilitaryId}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);

  } catch (e) {
    Logger.log(`Error in handleSetProfilePicture: ${e.message}`);
    sendReply(userId, `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ${e.message}`);
  }
}

/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 * @param {string} userId - LINE User ID
 * @param {string} text - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>
 */
function handleLinkCommandFile(userId, text) {
  const currentUserMilitaryId = getUserMilitaryId(userId);
  if (!currentUserMilitaryId) {
    return sendReply(userId, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ó‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
  }

  const parts = text.replace('/‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ', '').split('|');
  if (parts.length !== 2) {
    return sendReply(userId, `‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
üìù ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:
/‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà>|<‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(DD/MM/YYYY ‡∏û.‡∏®.)>
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
/‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ö‡∏Å.001/2568|25/07/2568`);
  }

  const [commandNumber, dateStr] = parts.map(p => p.trim());

  const commandDate = parseThaiDateToDateObject(dateStr);
  if (!commandDate) {
    return sendReply(userId, '‚ùó ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ DD/MM/YYYY (‡∏û.‡∏®. ‡πÄ‡∏ä‡πà‡∏ô 25/07/2568)');
  }
  const formattedDate = formatDateToThaiBuddhist(commandDate);

  const lastMessageId = CacheService.getUserCache().get(userId + '_lastMessageId');
  const lastMessageType = CacheService.getUserCache().get(userId + '_lastMessageType');
  const lastFileName = CacheService.getUserCache().get(userId + '_lastFileName');

  if (!lastMessageId || (lastMessageType !== 'image' && lastMessageType !== 'file')) {
    return sendReply(userId, '‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ (‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û) ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ');
  }

  const commandSheet = SpreadsheetApp.getActive().getSheetByName('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ');
  const data = commandSheet.getDataRange().getValues();
  let foundRowIndex = -1;
  let existingRank = '';
  let existingFirstName = '';
  let existingLastName = '';

  for (let i = 1; i < data.length; i++) {
    // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ": ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà(4), ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà(5)
    if (String(data[i][4]).trim() === String(commandNumber).trim() && String(data[i][5]).trim() === formattedDate) {
      foundRowIndex = i;
      existingRank = data[i][0];
      existingFirstName = data[i][1];
      existingLastName = data[i][2];
      break;
    }
  }

  if (foundRowIndex === -1) {
    return sendReply(userId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${commandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏`);
  }

  // Permission check: Only the owner of the command or an admin can link a file
  const commandOwnerMilitaryId = getMilitaryIdByPersonnelName(existingRank, existingFirstName, existingLastName);
  if ((!commandOwnerMilitaryId || String(currentUserMilitaryId).trim() !== String(commandOwnerMilitaryId).trim()) && !checkAdminPermission(userId)) {
    return sendReply(userId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô');
  }

  try {
    sendReply(userId, '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...');
    const fileBlob = fetchFileFromLine(lastMessageId);
    // Use original file name if available, otherwise construct one
    const uploadFileName = `${commandNumber.replace(/\//g, '_')}_${formattedDate.replace(/\//g, '-')}_${lastFileName || 'command_file'}.${fileBlob.getContentType().split('/')[1] || 'bin'}`;
    const uploadedUrl = uploadFileToDrive(uploadFileName, fileBlob, COMMAND_FILES_FOLDER_NAME);

    // Update the sheet
    // Columns in "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ": ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á(6)
    commandSheet.getRange(foundRowIndex + 1, 7).setValue(uploadedUrl); // Column 7 (G) is index 6

    // Clear cache
    CacheService.getUserCache().remove(userId + '_lastMessageId');
    CacheService.getUserCache().remove(userId + '_lastMessageType');
    CacheService.getUserCache().remove(userId + '_lastFileName');

    sendReply(userId, `‚úÖ ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà ${commandNumber} ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formattedDate} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);

  } catch (e) {
    Logger.log(`Error in handleLinkCommandFile: ${e.message}`);
    sendReply(userId, `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: ${e.message}`);
  }
}
